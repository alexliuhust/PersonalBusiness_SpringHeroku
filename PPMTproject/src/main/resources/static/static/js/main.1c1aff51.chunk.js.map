{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/types.js","actions/projectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducer/errorReducer.js","reducer/projectReducer.js","reducer/backlogReducer.js","reducer/securityReducer.js","reducer/index.js","store.js","components/Project/UpdateProject.js","actions/backlogActions.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","reportWebVitals.js","index.js"],"names":["CreateProjectButton","Fragment","className","to","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","start_date","end_date","onClick","bind","Component","connect","window","confirm","delete","Dashboard","getProjects","projects","map","state","get","res","setJETToken","token","defaults","headers","common","logout","localStorage","removeItem","setJWTToken","Header","location","href","headerLinks","security","validToken","user","userIsNotAuthenticated","userIsAuthenticated","fullName","data-toggle","data-target","AddProject","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","projectTasks","projectTask","booleanActionPaylaod","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","getBacklog","backlog_id","ProjectTask","pt_id","deleteProjectTask","priorityString","priorityID","priority","status","summary","dueDate","Backlog","tasks","projectTasks_prop","todoTasks","inprogressTasks","doneTasks","i","length","ProjectBoard","BoardContent","HeaderWithNoErrors","businessNotFound","identifier","boardAlgorithm","propTypes","PropTypes","object","isRequired","func","AddProjectTask","acceptanceCriteria","newTask","addProjectTask","project_task","UpdateProjectTask","creat_At","getProjectTask","updatedProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","currentTime","Date","now","exp","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c1aff51.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectButton = () => {\n  return (\n    <React.Fragment>\n      <div className=\"CreateButton\">\n        <Link to=\"/addBusiness\" className=\"btn btn-lg btn-dark\">\n          <i className=\"fas fa-plus-circle\"> Create a Business</i>\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default CreateProjectButton;\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (window.confirm(\"Are you sure?\")) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-1\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-7 col-md-5 col-9\">\n              <div className=\"text-center text-black\">\n                <h3>{project.projectName}</h3>\n              </div>\n\n              <hr />\n\n              <p>\n                <span className=\"Description\">Description: </span>{\" \"}\n                {project.description}\n              </p>\n              <hr />\n\n              <div className=\"Period\">\n                {project.start_date} ~ {project.end_date}\n              </div>\n            </div>\n\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`myTasks/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fa fa-flag-checkered pr-1\"> My Tasks </i>\n                  </li>\n                </Link>\n\n                <Link to={`updateBusiness/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Business Info</i>\n                  </li>\n                </Link>\n\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fa fa-minus-circle pr-1\"> Delete Business</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Component } from \"react\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">My Businesses</h1>\n              <br />\n              <CreateProjectButton />\n              <br />\n              <hr />\n\n              {projects.map((project) => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","/**\n * Add the token to the header called \"Authorization\"\n */\nimport axios from \"axios\";\n\nconst setJETToken = (token) => {\n  if (token) {\n    // look at the headers in postman,\n    // we just added a header called \"Authorization\" when coding the server end\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJETToken;\n","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async (dispatch) => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const login = (LoginRequest) => async (dispatch) => {\n  try {\n    // post -> LoginRequest, the Java object contains username and password\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n\n    // extract token from the server-end post, i.e. res.data\n    const { token } = res.data;\n\n    // store the token locally\n    localStorage.setItem(\"jwtToken\", token);\n\n    // set token in header (look at the headers in postman,\n    // we just added a header called \"Authorization\" when coding the server end)\n    setJWTToken(token);\n\n    // decode the token\n    const decoded = jwt_decode(token);\n\n    // dispatch to the securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {},\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              LogIn\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              My Businesses\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link \" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" /> {user.fullName}\n            </Link>\n          </li>\n\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Business Management\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { logout })(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Business</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Business Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Business ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-outline-dark btn-lg btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}","import { DELETE_PROJECT, GET_PROJECT, GET_PROJECTS } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n} from \"../actions/types\";\n\nconst initialState = {\n  projectTasks: [],\n  projectTask: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_BACKLOG:\n      return {\n        ...state,\n        projectTasks: action.payload,\n      };\n\n    case GET_PROJECT_TASK:\n      return {\n        ...state,\n        projectTask: action.payload,\n      };\n\n    case DELETE_PROJECT_TASK:\n      return {\n        ...state,\n        projectTasks: state.projectTasks.filter(\n          (projectTask) => projectTask.projectSequence !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {},\n};\n\nconst booleanActionPaylaod = (payload) => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPaylaod(action.payload),\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducer\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware), ReactReduxDevTools)\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Edit Business</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName,\n                    })}\n                    placeholder=\"Business Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectIdentifier,\n                    })}\n                    placeholder=\"Unique Business ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    disabled\n                  />\n                  {errors.projectIdentifier && (\n                    <div className=\"invalid-feedback\">\n                      {errors.projectIdentifier}\n                    </div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description,\n                    })}\n                    placeholder=\"Description\"\n                    name=\"description\"\n                    value={this.state.description}\n                    onChange={this.onChange}\n                  ></textarea>\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-outline-dark btn-lg btn-block\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import axios from \"axios\";\nimport {\n  GET_BACKLOG,\n  GET_PROJECT_TASK,\n  DELETE_PROJECT_TASK,\n  GET_ERRORS,\n} from \"./types\";\n\nexport const addProjectTask = (backlog_id, project_task, history) => async (\n  dispatch\n) => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/myTasks/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getBacklog = (backlog_id) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: GET_BACKLOG,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async (\n  dispatch\n) => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: GET_PROJECT_TASK,\n      payload: res.data,\n    });\n  } catch (err) {\n    history.push(`/myTasks/${backlog_id}`);\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async (dispatch) => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/myTasks/${backlog_id}`);\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\n  if (window.confirm(\"Are you sure?\")) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: DELETE_PROJECT_TASK,\n      payload: pt_id,\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n\n  render() {\n    const { projectTask } = this.props;\n\n    // Colorize the priority\n    let priorityString, priorityID;\n    if (projectTask.priority === 1) {\n      priorityString = \"HIGH\";\n      if (projectTask.status === \"TO_DO\") {\n        priorityID = \"HIGHpriority1\";\n      } else if (projectTask.status === \"IN_PROGRESS\") {\n        priorityID = \"HIGHpriority2\";\n      } else {\n        priorityID = \"HIGHpriority3\";\n      }\n    } else if (projectTask.priority === 2) {\n      priorityString = \"MEDIUM\";\n      if (projectTask.status === \"TO_DO\") {\n        priorityID = \"MEDIUMpriority1\";\n      } else if (projectTask.status === \"IN_PROGRESS\") {\n        priorityID = \"MEDIUMpriority2\";\n      } else {\n        priorityID = \"MEDIUMpriority3\";\n      }\n    } else {\n      priorityString = \"LOW\";\n      if (projectTask.status === \"TO_DO\") {\n        priorityID = \"LOWpriority1\";\n      } else if (projectTask.status === \"IN_PROGRESS\") {\n        priorityID = \"LOWpriority2\";\n      } else {\n        priorityID = \"LOWpriority3\";\n      }\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div\n          className=\"card-header text-primary text-light\"\n          id={`${priorityID}`}\n        >\n          {priorityString} Priority\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">\n            Summary of {projectTask.projectSequence}\n          </h5>\n          <p className=\"card-text text-truncate \">{projectTask.summary}</p>\n          <hr></hr>\n          <h6 className=\"text-right DueDate\">\n            Due Date: {projectTask.dueDate}\n          </h6>\n          <Link\n            to={`/updateTask/${projectTask.projectIdentifier}/${projectTask.projectSequence}`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              projectTask.projectIdentifier,\n              projectTask.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProjectTask })(ProjectTask);\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { projectTasks_prop } = this.props;\n    const tasks = projectTasks_prop.map((projectTask) => (\n      <ProjectTask key={projectTask.id} projectTask={projectTask} />\n    ));\n\n    // Organize Project Tasks by status\n    let todoTasks = [],\n      inprogressTasks = [],\n      doneTasks = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.projectTask.status === \"TO_DO\") {\n        todoTasks.push(tasks[i]);\n      } else if (tasks[i].props.projectTask.status === \"IN_PROGRESS\") {\n        inprogressTasks.push(tasks[i]);\n      } else {\n        doneTasks.push(tasks[i]);\n      }\n    }\n\n    // Sort Project Tasks by priority\n    // function compare(task1, task2) {\n    //   if (task1.priority > task2.priority) return 1;\n    //   if (task1.priority === task2.priority) return 0;\n    //   return -1;\n    // }\n    // todoTasks.sort(compare);\n    // inprogressTasks.sort(compare);\n    // doneTasks.sort(compare);\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header text-dark\" id=\"todocardheader\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoTasks}\n          </div>\n\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header text-dark\" id=\"inprogresscardheader\">\n                <h3>IN PROGRESS</h3>\n              </div>\n            </div>\n            {inprogressTasks}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header text-dark\" id=\"donecardheader\">\n                <h3>DONE</h3>\n              </div>\n            </div>\n            {doneTasks}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Backlog from \"./Backlog\";\nimport { getBacklog } from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      errors: {},\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { projectTasks } = this.props.backlog;\n    const { errors } = this.props;\n\n    let BoardContent;\n    let HeaderWithNoErrors;\n\n    const headerWithNoErrorsAlgorithm = () => {\n      return (\n        <div>\n          <h1 className=\"text-center\">My Tasks of Business {id}</h1>\n\n          <div className=\"CreateButton\">\n            <Link to={`/addTask/${id}`} className=\"btn btn-lg btn-primary\">\n              <i className=\"fas fa-plus-circle\"> Create Task for {id}</i>\n            </Link>\n          </div>\n\n          <br />\n          <hr />\n        </div>\n      );\n    };\n\n    HeaderWithNoErrors = headerWithNoErrorsAlgorithm();\n\n    const boardAlgorithm = (errors, projectTasks) => {\n      if (errors.businessNotFound) {\n        return (\n          <h1 className=\"bg-danger text-light text-center\">\n            {errors.businessNotFound}\n          </h1>\n        );\n      } else if (errors.identifier) {\n        return (\n          <h1 className=\"bg-danger text-light text-center\">\n            {errors.identifier}\n          </h1>\n        );\n      } else {\n        if (projectTasks.length === 0) {\n          return (\n            <div>\n              {HeaderWithNoErrors}\n              <h1 className=\"bg-info text-light text-center\">\n                No Tasks on this board Yet\n              </h1>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              {HeaderWithNoErrors}\n              <Backlog projectTasks_prop={projectTasks} />\n            </div>\n          );\n        }\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, projectTasks);\n\n    return <div className=\"container\">{BoardContent}</div>;\n  }\n}\n\ngetBacklog.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  backlog: state.backlog,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { addProjectTask } from \"../../../actions/backlogActions\";\nimport classnames from \"classnames\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n    };\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/myTasks/${id}`} className=\"btn btn-primary\">\n                Back to My Tasks\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { addProjectTask })(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n  getProjectTask,\n  updateProjectTask,\n} from \"../../../actions/backlogActions\";\nimport classnames from \"classnames\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      creat_At: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      creat_At,\n    } = nextProps.projectTask;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      creat_At,\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updatedProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      creat_At: this.state.creat_At,\n    };\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      updatedProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/myTasks/${this.state.projectIdentifier}`}\n                className=\"btn btn-primary\"\n              >\n                Back to My Tasks\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Task</h4>\n              <p className=\"lead text-center\">{this.state.projectSequence}</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary,\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  ></textarea>\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  projectTask: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  getProjectTask: PropTypes.func.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  projectTask: state.backlog.projectTask,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\n  UpdateProjectTask\n);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-7 text-center\">\n                <h1 className=\"BigHead1\">Business</h1>\n                <h1 className=\"BigHead2\">Management</h1>\n                <h1 className=\"BigHead3\">System</h1>\n              </div>\n\n              <div className=\"col-4 text-center\">\n                <div className=\"LoginButton\">\n                  <Link to=\"/login\" className=\"btn btn-dark btn-lg btn-block\">\n                    Log in\n                  </Link>\n                </div>\n                <div className=\"SigninButton\">\n                  <Link\n                    to=\"/register\"\n                    className=\"btn btn-dark btn-lg btn-block\"\n                  >\n                    Sign Up\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword,\n    };\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName,\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword,\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-outline-dark btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n  security: state.security,\n});\n\nexport default connect(mapStateToProps, { createNewUser })(Register);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {},\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors,\n      });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password,\n    };\n    this.props.login(LoginRequest);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username,\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password,\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-outline-dark btn-block mt-4\"\n                />\n\n                <hr />\n                <div className=\"form-group\">\n                  <Link\n                    to=\"/register\"\n                    className=\"btn btn-outline-dark btn-block mt-4\"\n                  >\n                    Don't have an account yet? Sign Up!\n                  </Link>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={(props) =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  security: state.security,\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  // set token in header (look at the headers in postman,\n  // we just added a header called \"Authorization\" when coding the server end)\n  setJWTToken(jwtToken);\n\n  // decode the token\n  const decoded = jwt_decode(jwtToken);\n\n  // dispatch to the securityReducer\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    //handle logout\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // public routes\n            }\n\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              // private routes\n            }\n\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addBusiness\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateBusiness/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/myTasks/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}